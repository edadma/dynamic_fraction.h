name: Continuous Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ${{ matrix.compiler }}

      - name: Create build directory
        run: mkdir -p build

      - name: Configure with CMake
        run: |
          cd build
          cmake .. -DCMAKE_C_COMPILER=${{ matrix.compiler }}

      - name: Build project
        run: |
          cd build
          make

      - name: Run tests
        run: |
          cd build
          ./tests

      - name: Run example
        run: |
          cd build
          ./example

  test-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Doxygen
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Generate documentation
        run: doxygen Doxyfile

      - name: Verify documentation quality
        run: ./.github/workflows/verify-docs.sh

  lint-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format

      - name: Check code formatting
        run: |
          if [ -f .clang-format ]; then
            echo "Checking code formatting..."
            clang-format --dry-run --Werror dynamic_fraction.h
            clang-format --dry-run --Werror tests.c
            clang-format --dry-run --Werror main.c
            echo "Code formatting check passed"
          else
            echo "No .clang-format file found, skipping format check"
          fi